@model IdleUI.Models.CharactersModel
@{
    ViewData["Title"] = "Characters";
}

@if (Model.NewCharacters != null)
{
    <div class="modal-bg" id="modal-bg">
        <div class="modal">
            <div class="modal-header">
                <span class="modal-close" id="modal-close">&times;</span>
                <h2>New Characters</h2>
            </div>
            <div class="char-grid">
                @Html.DisplayFor(m => m.NewCharacters)
            </div>
        </div>
    </div>
    <script type="text/javascript">
        var modal = document.getElementById("modal-bg");
        var modalClose = document.getElementById("modal-close");
        modalClose.onclick = function () {
            modal.style.display = "none";
        }
        window.onclick = function (event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }
    </script>
}
<div>
    <form class="form-inline" asp-controller="Game" asp-action="Index" method="get">
        <button type="submit" class="btn btn-primary">&lt;&lt; Back</button>
    </form>
    <form class="form-inline" asp-action="Summon" method="post">
        <input type="hidden" name="quantity" value="1" />
        <button type="submit" class="btn btn-primary" @(Model.Account.Diamonds < Model.SummonCost ? " disabled" :
                                                                  "")>Summon 1x for @Model.SummonCost</button>
    </form>
    <form class="form-inline" asp-action="Summon" method="post">
        <input type="hidden" name="quantity" value="10" />
        <button type="submit" class="btn btn-primary" @(Model.Account.Diamonds < Model.SummonCost * 10 ? " disabled" :
                                                                  "")>Summon 10x for @(Model.SummonCost * 10)</button>
    </form>
    <label>Diamonds:</label>
    <output id="diamondsTotal">@Model.Account.Diamonds</output>
</div>
<div class="char-grid">
    @Html.DisplayFor(m => m.Account.Characters)
</div>
<script type="text/javascript">
    var formatter = new Intl.NumberFormat(undefined, { notation: 'compact', maximumFractionDigits: 3 });

    // Format diamond total to be compact
    var diamondsTotal = document.getElementById("diamondsTotal");
    diamondsTotal.innerHTML = formatter.format(diamondsTotal.innerHTML);
</script>